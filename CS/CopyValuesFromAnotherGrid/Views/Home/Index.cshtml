
@{
    ViewBag.Title = "Index";
}

<h2>Items request list</h2>
<i>
    Specify items to request. Note that you can add predefined items<br/>
    using the "Predefined items" dialog. Click the "Predefined items" to invoke this dialog.
</i>
<br /><br />

@Html.Action("GridViewOrderListPartial")
@Html.DevExpress().PopupControl(settings => {
    settings.Name = "CatalogPopup";
    settings.Height = Unit.Pixel(500);
    settings.Width = Unit.Pixel(400);
    settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
    settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
    settings.Modal = true;

    settings.ShowHeader = false;
    settings.ShowFooter = true;
    
    settings.SetContent(() => { Html.RenderPartial("Catalog"); });
    settings.SetFooterContentTemplateContent(t => {
        ViewContext.Writer.Write("<div class='container__buttons'>");
        Html.DevExpress().Button(settingsConfirmButton => {
            settingsConfirmButton.Name = "ConfirmButton";
            settingsConfirmButton.Text = "Confirm";
            settingsConfirmButton.UseSubmitBehavior = false;
            settingsConfirmButton.RenderMode = ButtonRenderMode.Link;
            settingsConfirmButton.ControlStyle.CssClass = "button";
            settingsConfirmButton.ClientSideEvents.Click = "OrderListHelper.ConfirmPredefinedOrders";
        }).Render();
        Html.DevExpress().Button(settingsCancelButton => {
            settingsCancelButton.Name = "CancelButton";
            settingsCancelButton.Text = "Cancel";
            settingsCancelButton.UseSubmitBehavior = false;
            settingsCancelButton.RenderMode = ButtonRenderMode.Link;
            settingsCancelButton.ControlStyle.CssClass = "button";
            settingsCancelButton.ClientSideEvents.Click = "OrderListHelper.CancelPredefinedOrders";
        }).Render();
        ViewContext.Writer.Write("</div>");
    });
}).GetHtml()