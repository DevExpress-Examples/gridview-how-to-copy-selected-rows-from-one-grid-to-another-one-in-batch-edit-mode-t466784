@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridViewOrderList";
        settings.CallbackRouteValues = new { Controller = "Home", Action = "GridViewOrderListPartial" };
        settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
        settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "Home", Action = "GridViewOrderListBatchUpdate" };


        settings.KeyFieldName = "ItemID";

        settings.Columns.Add(col => {
            col.Caption = "#";
            col.EditFormSettings.Visible = DefaultBoolean.False;
            col.SetHeaderCaptionTemplateContent(t => {
                ViewContext.Writer.Write("<div class='container__command-buttons'>");

                Html.DevExpress().Button(buttonSettings => {
                    buttonSettings.Name = "NewItemButton";
                    buttonSettings.Text = "New";
                    buttonSettings.UseSubmitBehavior = false;
                    buttonSettings.RenderMode = ButtonRenderMode.Link;
                    buttonSettings.ClientSideEvents.Click = "function (s, e) { OrderListHelper.AddNewItem(); }";
                }).Render();
                ViewContext.Writer.Write("</div>");
            });
            col.SetDataItemTemplateContent(t => {
                ViewContext.Writer.Write("<div class='container__command-buttons'>");
                ViewContext.Writer.Write("<a href='javascript:;' onclick='OrderListHelper.DeleteItem(event)'>Delete</a>");
                //Html.DevExpress().Button(buttonSettings => {
                //    buttonSettings.Name = "DeleteItemButton";
                //    buttonSettings.Text = "Delete";
                //    buttonSettings.UseSubmitBehavior = false;
                //    buttonSettings.RenderMode = ButtonRenderMode.Link;
                //    buttonSettings.ClientSideEvents.Click = "function (s, e) { OrderListHelper.DeleteItem(); }";
                //}).Render();
                ViewContext.Writer.Write("</div>");
            });
        });

        settings.Columns.Add("ItemName");
        settings.Columns.Add("ItemDescription");

        settings.SetStatusBarTemplateContent(c => {
            ViewContext.Writer.Write("<div class='container__buttons'>");
            Html.DevExpress().Button(buttonSettings => {
                buttonSettings.Name = "PredefinedItemsButton";
                buttonSettings.Text = "Predefined items";
                buttonSettings.UseSubmitBehavior = false;
                buttonSettings.RenderMode = ButtonRenderMode.Link;
                buttonSettings.ControlStyle.CssClass = "button button__left-aligned";
                buttonSettings.ClientSideEvents.Click = "function (s, e) { CatalogPopup.Show(); }";
            }).Render();
            Html.DevExpress().Button(buttonSettings => {
                buttonSettings.Name = "SaveChangesButton";
                buttonSettings.Text = "Save Changes";
                buttonSettings.UseSubmitBehavior = false;
                buttonSettings.RenderMode = ButtonRenderMode.Link;
                buttonSettings.ControlStyle.CssClass = "button";
                //buttonSettings.ClientSideEvents.Click = "function (s, e) { if (GridViewOrderList.batchEditApi.HasChanges()) { GridViewOrderList.UpdateEdit(); OrderListHelper.LastAddedIndex = 0; } }";
                buttonSettings.ClientSideEvents.Click = "function (s, e) { if (GridViewOrderList.batchEditApi.HasChanges()) { GridViewOrderList.UpdateEdit(); OrderListHelper.NewRowIndices = []; } }";
            }).Render();
            Html.DevExpress().Button(buttonSettings => {
                buttonSettings.Name = "CancelChangesButton";
                buttonSettings.Text = "Cancel Changes";
                buttonSettings.UseSubmitBehavior = false;
                buttonSettings.RenderMode = ButtonRenderMode.Link;
                buttonSettings.ControlStyle.CssClass = "button";
                //buttonSettings.ClientSideEvents.Click = "function (s, e) { if (GridViewOrderList.batchEditApi.HasChanges()) { GridViewOrderList.CancelEdit(); OrderListHelper.LastAddedIndex = 0; } }";
                buttonSettings.ClientSideEvents.Click = "function (s, e) { if (GridViewOrderList.batchEditApi.HasChanges()) { GridViewOrderList.CancelEdit(); OrderListHelper.NewRowIndices = []; } }";
            }).Render();
            ViewContext.Writer.Write("</div>");

        });
    });
}
@grid.Bind(Model).GetHtml()